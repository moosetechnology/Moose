name: Stable

on:
  release:
    types: [created, edited]

jobs:

# Read the content of the files pharo-versions.json and moose-version.json. 
 get-versions:
    runs-on: ubuntu-latest
    outputs: 
      versions: ${{ steps.read-file.outputs.versions }}
    steps:
      - uses: actions/checkout@v3
      - name: Read file
        id: read-file
        run: |
          VERSIONS=$(cat $GITHUB_WORKSPACE/.github/workflows/versions.json)
          echo "versions=$VERSIONS" >> $GITHUB_OUTPUT


 build:
    runs-on: ubuntu-latest
    needs: get-versions
    env:
      PROJECT_NAME: ${{ fromJSON(needs.get-versions.outputs.versions).moose-name }}
    strategy:
      matrix:
        smalltalk: ${{ fromJSON(needs.get-versions.outputs.versions).pharo-versions }}
    name: ${{ matrix.smalltalk }}
    steps:
      - uses: actions/checkout@v3
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: ${{ matrix.smalltalk }}
      - run: smalltalkci -s ${{ matrix.smalltalk }}
        shell: bash
        timeout-minutes: 15

      - name: package
        run: |
          mv /home/runner/.smalltalkCI/_builds/* .
          mv TravisCI.image $PROJECT_NAME-${{ matrix.smalltalk }}.image
          mv TravisCI.changes $PROJECT_NAME-${{ matrix.smalltalk }}.changes
          echo ${${{ matrix.smalltalk }}} | sed -e 's/\.//g' > pharo.version
          zip -r $PROJECT_NAME-${{ matrix.smalltalk }}.zip $PROJECT_NAME-${{ matrix.smalltalk }}.image $PROJECT_NAME-${{ matrix.smalltalk }}.changes *.sources pharo.version
          ls

      - name: Update release
        uses: Xotl/cool-github-releases@v1
        with:
          mode: update
          replace_assets: true
          release_tag: ${{ fromJSON(needs.get-versions.outputs.versions).release-tag }}
          assets: ${{ env.PROJECT_NAME }}-${{ matrix.smalltalk }}.zip
          github_token: ${{ secrets.GITHUB_TOKEN }}
