name: Release-Moose

on:
  release:
    types: [created, edited]

jobs:

# Read the content of the files pharo-versions.json and moose-version.json. 
 get-versions:
    runs-on: ubuntu-latest
    outputs: 
      versions: ${{ steps.read-file.outputs.versions }}
    steps:
      - uses: actions/checkout@v3
      - name: Read file
        id: read-file
        run: |
          VERSIONS=$(cat $GITHUB_WORKSPACE/.github/workflows/versions.json)
          echo "versions=$VERSIONS" >> $GITHUB_OUTPUT


 build:
    runs-on: ubuntu-latest
    needs: get-versions
    env:
      PROJECT_NAME: ${{ fromJSON(needs.get-versions.outputs.versions).moose-name }}
    strategy:
    fail-fast: false
      matrix:
        smalltalk: ${{ fromJSON(needs.get-versions.outputs.versions).pharo-versions }}
    name: ${{ matrix.smalltalk }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Option fetching all commits
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: ${{ matrix.smalltalk }}
      - run: smalltalkci -s ${{ matrix.smalltalk }}
        shell: bash
        timeout-minutes: 15

      - name: package
        run: |
          mv /home/runner/.smalltalkCI/_builds/* .
          mv TravisCI.image $PROJECT_NAME-${{ matrix.smalltalk }}.image
          mv TravisCI.changes $PROJECT_NAME-${{ matrix.smalltalk }}.changes
          echo ${${{ matrix.smalltalk }}} | sed -e 's/.*\-//g ; s/\..*//g ; s/$/0/' > pharo.version
        # Remove every character before '-' ; Remove point and anything after it ; add a '0'.
        # This pattern transforms as follow: 'Pharo64-9.0' --> '90' and 'Pharo64-10' --> '100'.
      - name: package
        run: |
          zip -r $PROJECT_NAME-${{ matrix.smalltalk }}.zip $PROJECT_NAME-${{ matrix.smalltalk }}.image $PROJECT_NAME-${{ matrix.smalltalk }}.changes *.sources pharo.version
          ls

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./${{ env.PROJECT_NAME }}-${{ matrix.smalltalk }}.zip
          asset_name: ${{ env.PROJECT_NAME }}-${{ matrix.smalltalk }}.zip
          asset_content_type: application/zip
