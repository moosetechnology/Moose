Trait {
	#name : #FamixTParameterizedTypeUser,
	#instVars : [
		'#argumentsInParameterizedTypes => FMMany type: #FamixTWithParameterizedTypeUsers opposite: #arguments'
	],
	#category : #'Famix-Traits-ParameterizedTypeUser'
}

{ #category : #meta }
FamixTParameterizedTypeUser classSide >> annotation [

	<MSEClass: #TParameterizedTypeUser super: #Trait>
	<generated>
	<package: #'Famix-Traits'>
	^self
]

{ #category : #accessing }
FamixTParameterizedTypeUser >> addArgumentsInParameterizedType: anObject [

	argumentsInParameterizedTypes add: anObject

]

{ #category : #accessing }
FamixTParameterizedTypeUser >> argumentsInParameterizedTypes [

	<generated>
	^ argumentsInParameterizedTypes
]

{ #category : #accessing }
FamixTParameterizedTypeUser >> argumentsInParameterizedTypes: anObject [

	<generated>
	argumentsInParameterizedTypes value: anObject

]
